# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
from tkinter import (
    Tk,
    Canvas,
    Entry,
    Text,
    Button,
    PhotoImage,
    filedialog,
    messagebox,
    ttk,
)
import tkinter as tk
import sys

from cruds.Reuniao import cadastrar_reuniao


ASSETS_PATH = Path(__file__).parent / "assets" / "frame0"
ROOT_PATH = Path(__file__).parent.parent.parent
if str(ROOT_PATH) not in sys.path:
    sys.path.append(str(ROOT_PATH))
from Telas.defs import *
from tab_functions import abrir_aba_leitura


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def criar_tela_comecar_rg(
    frame: ttk.Frame,
    imagens: dict[str, dict],
    notebook: ttk.Notebook,
    imagens_dict: dict[str, dict],
):
    # Imagens
    imagens["image_1"] = PhotoImage(file=relative_to_assets("image_1.png"))
    imagens["button_1"] = PhotoImage(file=relative_to_assets("button_1.png"))
    imagens["image_2"] = PhotoImage(file=relative_to_assets("image_2.png"))
    imagens["image_3"] = PhotoImage(file=relative_to_assets("image_3.png"))
    imagens["image_4"] = PhotoImage(file=relative_to_assets("image_4.png"))

    # Canvas
    canvas = Canvas(
        frame,
        bg="#FFFFFF",
        height=768,
        width=1365,
        bd=0,
        highlightthickness=0,
        relief="ridge",
    )
    canvas.place(x=0, y=0)

    # Adiciona imagens, textos, retângulos ao canvas
    canvas.create_image(682.0, 384.0, image=imagens["image_1"])
    canvas.create_text(
        61.0,
        155.0,
        anchor="nw",
        text="Local de salvamento:",
        fill="#FFFFFF",
        font=(FONTE_TELAS, 48 * -1),
    )
    canvas.create_rectangle(411.0, 165.0, 1321.0, 211.0, fill="#FFFFFF", outline="")
    canvas.create_image(682.0, 619.0, image=imagens["image_2"])
    canvas.create_image(74.0, 58.0, image=imagens["image_3"])
    canvas.create_image(1276.0, 58.0, image=imagens["image_4"])

    # Variáveis
    pasta_escolhida = tk.StringVar()

    # Rótulo para exibir a pasta escolhida
    label_pasta_escolhida = ttk.Label(
        master=frame,
        textvariable=pasta_escolhida,
        font=(FONTE_TELAS, 24),
        background="#FFFFFF",
    )
    label_pasta_escolhida.place(x=467.0, y=165.0, height=46.0)

    # Botões
    button_escolher_pasta = Button(
        frame,
        text="Escolher\nPasta",
        borderwidth=0,
        highlightthickness=0,
        command=lambda: escolher_pasta(),
        relief="flat",
    )
    button_escolher_pasta.place(x=411.0, y=165.0, width=46.0, height=46.0)

    button_iniciar = Button(
        frame,
        image=imagens["button_1"],
        borderwidth=0,
        highlightthickness=0,
        command=lambda: iniciar_reuniao(pasta_escolhida.get()),
        relief="flat",
    )
    button_iniciar.place(x=483.0, y=334.0, width=400.0, height=100.0)

    def iniciar_reuniao(local_de_salvamento : str):
        if local_de_salvamento == "Nenhuma pasta escolhida" or local_de_salvamento == "":
            messagebox.showerror(
                title="Local de salvamento",
                message="Nenhuma pasta foi escolhida para salvar o dump",
            )
            return
        id_reuniao = cadastrar_reuniao()
        if id_reuniao:
            notebook.forget(frame)
            abrir_aba_leitura(notebook, imagens_dict, id_reuniao, Path(local_de_salvamento))

    def escolher_pasta():
        nonlocal pasta_escolhida
        pasta = filedialog.askdirectory()
        if pasta:
            pasta_escolhida.set(pasta)
        else:
            pasta_escolhida.set("Nenhuma pasta escolhida")
